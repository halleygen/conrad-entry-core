{# Stencil #}

import Foundation

{% for type in types.implementing.ShipmentAutogen %}
// MARK: - {{ type.name|replace:"Properties","" }}

// MARK: CreationRequest

public struct {{ type.name|replace:"Properties","CreationRequest" }}: Codable, Hashable {
    {% for variable in type.storedVariables|!annotated:"skipCreationRequest" %}
        public var {{ variable.name }}: {{ variable.typeName }} 
    {% endfor %}

    public init(
        {% for variable in type.storedVariables|!annotated:"skipCreationRequest" %}
            {{ variable.name }}: {{ variable.typeName }}{% if not forloop.last %}, {% endif %}
        {% endfor %}
    ) {
        {% for variable in type.storedVariables|!annotated:"skipCreationRequest" %}
            self.{{ variable.name }} = {{ variable.name }}
        {% endfor %}
    }
}

// MARK: MutationRequest

public struct {{ type.name|replace:"Properties","MutationRequest" }}: Codable, Hashable {
    {% for variable in type.storedVariables|!annotated:"skipMutationRequest" %}
        public var {{ variable.name }}: {{ variable.typeName }}?
    {% endfor %}

    public init(
        {% for variable in type.storedVariables|!annotated:"skipMutationRequest" %}
            {{ variable.name }}: {{ variable.typeName }}? = nil{% if not forloop.last %}, {% endif %}
        {% endfor %}
    ) {
        {% for variable in type.storedVariables|!annotated:"skipMutationRequest" %}
            self.{{ variable.name }} = {{ variable.name }}
        {% endfor %}
    }
}

// MARK: DTO

public struct {{ type.name|replace:"Properties","DTO" }}: Codable, Hashable, APIResponseItem {
    {% for variable in type.storedVariables %}
        public let {{ variable.name }}: {{ variable.typeName }}   
    {% endfor %}

    public init(
        {% for variable in type.storedVariables %}
            {{ variable.name }}: {{ variable.typeName }}{% if not forloop.last %}, {% endif %}
        {% endfor %}
    ) {
        {% for variable in type.storedVariables %}
            self.{{ variable.name }} = {{ variable.name }}
        {% endfor %}
    }
}

// MARK: PartialDTO

public struct Partial{{ type.name|replace:"Properties","DTO" }}: Codable, Hashable {
    {% for variable in type.storedVariables %}
        public let {{ variable.name }}: {{ variable.typeName }}{% if variable|!annotated:"requiredInPartialDTO" %}?{% endif %}
    {% endfor %}

    public init(
        {% for variable in type.storedVariables %}
            {{ variable.name }}: {{ variable.typeName }}{% if variable|!annotated:"requiredInPartialDTO" %}? = nil{% endif %}{% if not forloop.last %}, {% endif %}
        {% endfor %}
    ) {
        {% for variable in type.storedVariables %}
            self.{{ variable.name }} = {{ variable.name }}
        {% endfor %}
    }
}

{% endfor %}